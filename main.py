import telebot
import config
import requests
from bs4 import BeautifulSoup as BS
from bs4 import BeautifulSoup

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

def crypto_price(name):
	rs = requests.get('https://alpari.com/ru/markets/crypto/' + name + '/')
	html = BS(rs.content, 'html.parser')
	title = html.select('.analytics-crypto-item__instrument-price-left')

	return title


def stat_24hour(name):
	rs = requests.get('https://alpari.com/ru/markets/crypto/' + name + '/')
	html = BS(rs.content, 'html.parser')
	title = html.select('.analytics-crypto-item__instrument-price-right')
	title = str(title)
	title = title.replace('[<div class="analytics-crypto-item__instrument-price-right">','')
	title = title.replace('</div><div>2.67%</div></div>]','')
	title = title.replace('<div>','')
	return title[0]


def last_news():
	URL = 'https://prometheus.ru/articles/'
	HEADERS = {
		'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36'

	}

	response = requests.get(URL, headers = HEADERS)
	soup = BeautifulSoup(response.content,'html.parser')
	items = soup.findAll('h2',class_= 'vcex-recent-news-entry-title-heading')
	comps = []

	for item in items:
		comps.append({
			'title' : item.find('a').text,
			'link'  : item.find('a').get('href')

			})
	check_list = {}

	for comp in comps :

		gg = comp['title']

	return comp['title']

def last_news_link():
	URL = 'https://prometheus.ru/articles/'
	HEADERS = {
		'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36'

	}

	response = requests.get(URL, headers = HEADERS)
	soup = BeautifulSoup(response.content,'html.parser')
	items = soup.findAll('h2',class_= 'vcex-recent-news-entry-title-heading')
	comps = []

	for item in items:
		comps.append({
			'title' : item.find('a').text,
			'link'  : item.find('a').get('href')

			})
	check_list = {}

	for comp in comps :

		gg = comp['title']

	return comp['link']

def all_links():
	URL = 'https://prometheus.ru/articles/'
	HEADERS = {
		'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36'

	}

	response = requests.get(URL, headers = HEADERS)
	soup = BeautifulSoup(response.content,'html.parser')
	items = soup.findAll('h2',class_= 'vcex-recent-news-entry-title-heading')
	comps = []

	for item in items:
		comps.append({
			'title' : item.find('a').text,
			'link'  : item.find('a').get('href')

			})
	check_list = []

	for comp in comps :
		return comp['link']





@bot.message_handler(commands=['start'])
def welcome(message):
	markup = types.ReplyKeyboardMarkup(resize_keyboard=False)
	item1 = types.KeyboardButton('üíµ–ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')
	item2 = types.KeyboardButton('üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 24 —á–∞—Å–∞')
	item3 = types.KeyboardButton('üì∞–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–æ–≤–æ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç')
	item4 = types.KeyboardButton('üí∞ICO')
	item5 = types.KeyboardButton('üÜï–î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤')

	markup.add(item1,item2,item3,item4,item5)
	gg = '–ü—Ä–∏–≤–µ—Ç, <b>' + message.from_user.first_name.title() + '</b>!\n –Ø - PhloIT, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–∑—ã–≤–∞—Ç—å –º–µ–Ω—è –ª—É—á—à–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–º  –≤ –º–∏—Ä–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Çüòè\n\n–ù—É —á—Ç–æ,–Ω–∞—á–Ω—ë–º?!üòÉ'.format(message.from_user, bot.get_me())
	bot.send_message(message.chat.id, gg ,parse_mode='html',reply_markup=markup)


@bot.message_handler(content_types=['text'])
def crypto_price_telegram(message):
	if message.chat.type == 'private':
		if message.text == 'üíµ–ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç':
			markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
			item1 = types.KeyboardButton('Bitcoin')
			item2 = types.KeyboardButton('Ethereum')
			item3 = types.KeyboardButton('XRP')
			item4 = types.KeyboardButton('Monero')
			item5 = types.KeyboardButton('Bitcoin Cash')
			item6 = types.KeyboardButton('Dash')
			item7 = types.KeyboardButton('Litecoin')
			item8 = types.KeyboardButton('EOS')
			item9 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚óÄÔ∏è')
			markup.add(item1,item2,item3,item4,item5,item6,item7,item8,item9)

			bot.send_message(message.chat.id, '–¢—ã–∫–∞–π –Ω–∞ –ª—é–±—É—é –∫—Ä–∏–ø—Ç—É –≤–Ω–∏–∑—É –∏ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ —É–∑–Ω–∞–≤–∞–π –µ—ë –∫—É—Ä—Å' ,parse_mode='html',reply_markup=markup)

		if message.text == 'Bitcoin':
			bot.send_message(message.chat.id, crypto_price('bitcoin'))
		elif message.text == 'Ethereum':
			bot.send_message(message.chat.id, crypto_price('ethereum'))
		elif message.text == 'XRP':
			bot.send_message(message.chat.id, crypto_price('xrp'))
		elif message.text == 'Monero':
			bot.send_message(message.chat.id, crypto_price('monero'))
		elif message.text == 'Bitcoin Cash':
			bot.send_message(message.chat.id, crypto_price('bitcoin_cash'))
		elif message.text == 'Dash':
			bot.send_message(message.chat.id, crypto_price('dash'))
		elif message.text == 'Litecoin':
			bot.send_message(message.chat.id, crypto_price('litecoin'))
		elif message.text == 'EOS':
			bot.send_message(message.chat.id, crypto_price('eos'))
		elif message.text == '–ù–∞–∑–∞–¥ ‚óÄÔ∏è':
			bot.send_message(message.chat.id, welcome(message))


		if message.text == 'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 24 —á–∞—Å–∞':

			markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
			item1 = types.KeyboardButton('–î–∏–Ω–∞–º–∏–∫–∞ Bitcoin')
			item2 = types.KeyboardButton('–î–∏–Ω–∞–º–∏–∫–∞ Ethereum')
			item3 = types.KeyboardButton('–î–∏–Ω–∞–º–∏–∫–∞ XRP')
			item4 = types.KeyboardButton('–î–∏–Ω–∞–º–∏–∫–∞ Monero')
			item5 = types.KeyboardButton('–î–∏–Ω–∞–º–∏–∫–∞ Bitcoin Cash')
			item6 = types.KeyboardButton('–î–∏–Ω–∞–º–∏–∫–∞ Dash')
			item7 = types.KeyboardButton('–î–∏–Ω–∞–º–∏–∫–∞ Litecoin')
			item8 = types.KeyboardButton('–î–∏–Ω–∞–º–∏–∫–∞ EOS')
			item9 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚óÄÔ∏è')
			markup.add(item1,item2,item3,item4,item5,item6,item7,item8,item9)

			bot.send_message(message.chat.id, '–¢—ã–∫–∞–π –Ω–∞ –ª—é–±—É—é –∫—Ä–∏–ø—Ç—É –≤–Ω–∏–∑—É –∏ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ —É–∑–Ω–∞–π –¥–∏–Ω–∞–º–∏–∫—É –∫—É—Ä—Å–∞' ,parse_mode='html',reply_markup=markup)


		if message.text == '–î–∏–Ω–∞–º–∏–∫–∞ Bitcoin':
			gg = stat_24hour('bitcoin')
			if gg == '-' :
				bot.send_message(message.chat.id, '–ë–∏—Ç–æ–∫ –ø–æ–¥—Å–µ–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üò≠‚¨áÔ∏è')
			else :
				bot.send_message(message.chat.id, '–ë–∏—Ç–æ–∫ –ø–æ–¥–Ω—è–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üòÉüÜô')
		elif message.text == '–î–∏–Ω–∞–º–∏–∫–∞ Ethereum':
			gg = stat_24hour('ethereum')
			if gg == '-' :
				bot.send_message(message.chat.id, '–≠—Ñ–∏—Ä –ø–æ–¥—Å–µ–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üò≠‚¨áÔ∏è')
			else :
				bot.send_message(message.chat.id, '–≠—Ñ–∏—Ä –ø–æ–¥–Ω—è–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üòÉüÜô')
		elif message.text == '–î–∏–Ω–∞–º–∏–∫–∞ XRP':
			gg = stat_24hour('xrp')
			if gg == '-' :
				bot.send_message(message.chat.id, 'XRP –ø–æ–¥—Å–µ–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üò≠‚¨áÔ∏è')
			else :
				bot.send_message(message.chat.id, 'XRP –ø–æ–¥–Ω—è–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üòÉüÜô')
		elif message.text == '–î–∏–Ω–∞–º–∏–∫–∞ Monero':
			gg = stat_24hour('monero')
			if gg == '-' :
				bot.send_message(message.chat.id, 'Monero –ø–æ–¥—Å–µ–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üò≠‚¨áÔ∏è')
			else:
				bot.send_message(message.chat.id, 'Monero –ø–æ–¥–Ω—è–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üòÉüÜô')
		elif message.text == '–î–∏–Ω–∞–º–∏–∫–∞ Bitcoin Cash':
			gg = stat_24hour('bitcoin_cash')
			if gg == '-' :
				bot.send_message(message.chat.id, 'Bitcoin Cash –ø–æ–¥—Å–µ–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üò≠‚¨áÔ∏è')
			else:
				bot.send_message(message.chat.id, 'Bitcoin Cash –ø–æ–¥–Ω—è–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üòÉüÜô')
		elif message.text == '–î–∏–Ω–∞–º–∏–∫–∞ Dash':
			gg = stat_24hour('dash')
			if gg == '-' :
				bot.send_message(message.chat.id, 'Dash –ø–æ–¥—Å–µ–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üò≠‚¨áÔ∏è')
			else:
				bot.send_message(message.chat.id, 'Dash –ø–æ–¥–Ω—è–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üòÉüÜô')
		elif message.text == '–î–∏–Ω–∞–º–∏–∫–∞ Litecoin':
			gg = stat_24hour('litecoin')
			if gg == '-' :
				bot.send_message(message.chat.id, 'Litecoin –ø–æ–¥—Å–µ–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üò≠‚¨áÔ∏è')
			else:
				bot.send_message(message.chat.id, 'Litecoin –ø–æ–¥–Ω—è–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üòÉüÜô')
		elif message.text == '–î–∏–Ω–∞–º–∏–∫–∞ EOS':
			gg = stat_24hour('eos')
			if gg == '-' :
				bot.send_message(message.chat.id, 'EOS –ø–æ–¥—Å–µ–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üò≠‚¨áÔ∏è')
			else:
				bot.send_message(message.chat.id, 'EOS –ø–æ–¥–Ω—è–ª—Å—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞üòÉüÜô')
		elif message.text == '–ù–∞–∑–∞–¥ ‚óÄÔ∏è':
			bot.send_message(message.chat.id, welcome(message))


		if message.text == 'üì∞–ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–æ–≤–æ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç':
			bot.send_message(message.chat.id, last_news() + '\n–°—Å—ã–ª–∫–∞ : ' + last_news_link(),parse_mode='html')

		if message.text == 'üí∞ICO':
			markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
			item1 = types.KeyboardButton('–¢–µ–∫—É—â–∏–µ ICO')
			item2 = types.KeyboardButton('–ë—É–¥—É—â–∏–µ ICO')
			item3 = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ ICO')
			item4 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚óÄÔ∏è')
			markup.add(item1,item2,item3,item4)

			sti = open('stickers/1.webp', 'rb')
			bot.send_sticker(message.chat.id, sti,reply_markup=markup)

		if message.text == '–¢–µ–∫—É—â–∏–µ ICO':
			bot.send_message(message.chat.id, '1)Original Protocol\n$38,100,000\nhttps://prometheus.ru/ico/origin-protocol/\n\n2)Emotiq\n11,800,000 USD/$39,000,000\nhttps://prometheus.ru/ico/emotiq-blockchain/\n\n3)Ankr Network\n15,950,000 USD/$18,700,000\nhttps://prometheus.ru/ico/ankr-network-cloud-computing/\n\n4)DREP\n$15,180,000/$19,800,000\nhttps://prometheus.ru/ico/drep/\n\n5)Quadrant Protocol\n15,000,000 USD/20,000,000 USD\nhttps://prometheus.ru/ico/quadrant-protocol/',parse_mode='html')

		if message.text == '–ë—É–¥—É—â–∏–µ ICO':
			bot.send_message(message.chat.id,'1)Orchid Protocol\n$40,800,000\nhttps://prometheus.ru/ico/orchid-protocol/\n\n2)Keep network\nhttps://prometheus.ru/ico/keep-network/\n\n3)NuCypher\n$5,150,000\nhttps://prometheus.ru/ico/nucypher/\n\n4)Mattereum\nhttps://prometheus.ru/ico/mattereum/\n\n5)Lambda\n$15,000,000/$20,000,000\nhttps://prometheus.ru/ico/lambda/',parse_mode='html')

		if message.text == '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ ICO':
			markup = types.InlineKeyboardMarkup(row_width=2)
			item1 = types.InlineKeyboardButton("BABB", callback_data='babb')
			item2 = types.InlineKeyboardButton("TE-FOOD", callback_data='te_food')
			item3 = types.InlineKeyboardButton("Electrify.Asia", callback_data='asia')
			item4  = types.InlineKeyboardButton("Debitum Network", callback_data='networks')
			item5 = types.InlineKeyboardButton("Banca",callback_data='banca')
			item6 = types.InlineKeyboardButton("NaPoleonX",callback_data='napoleon')

			markup.add(item1,item2,item3,item4,item5,item6)

			bot.send_message(message.chat.id, '–ü–æ–µ—Ö–∞–ª–∏üëá', reply_markup=markup)

		if message.text == 'üÜï–î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤':
			markup = types.ReplyKeyboardMarkup(resize_keyboard=False)
			item1 = types.KeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ω?')
			item2 = types.KeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ ICO?')
			item3 = types.KeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–µ–π–¥–∏–Ω–≥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π?')
			item4 = types.KeyboardButton('–ì–¥–µ —Ö—Ä–∞–Ω–∏—Ç—å –±–∏—Ç–∫–æ–∏–Ω –∏ –¥—Ä—É–≥–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã? –í –∫–æ—à–µ–ª—å–∫–µ')
			item5 = types.KeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ –±–∏—Ç–∫–æ–∏–Ω?')
			item6 = types.KeyboardButton('–î–∞–ª–µ–µ')
			markup.add(item1,item2,item3,item4,item5,item6)

			bot.send_message(message.chat.id,'–¢—É—Ç —Å—Ç–æ–ª—å–∫–æ –∏–Ω—Ñ—ã....üòÆ\n–ï—Å–ª–∏ —Ç—ã –≤—Å—ë —ç—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–µ—à—å - —Ç–æ—á–Ω–æ —Å—Ç–∞–Ω–µ—à—å –ø—Ä–æ!üòâ',parse_mode='html',reply_markup=markup)

		if message.text =='–î–∞–ª–µ–µ':
			markup = types.ReplyKeyboardMarkup(resize_keyboard=False)
			item1 = types.KeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã?')
			item2 = types.KeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞—Ä—Ö–∏–∑–º?')
			item3 = types.KeyboardButton('–ù–µ –ø–æ–ø–∞–¥—É –ª–∏ —è –≤ —Ç—é—Ä—å–º—É –∑–∞ –±–∏—Ç–∫–æ–∏–Ω—ã?')
			item4 = types.KeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞–π–Ω–∏–Ω–≥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç?')
			item5 = types.KeyboardButton('–ö–∞–∫ –º–∞–π–Ω–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É')
			item6 = types.KeyboardButton('–ß—Ç–æ —Ç–∞–∫–æ–µ –≠—Ñ–∏—Ä–∏—É–º?')
			item7 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚óÄÔ∏è')

			markup.add(item1,item2,item3,item4,item5,item6,item7)

			bot.send_message(message.chat.id,'–°—Ç—Ä–∞–Ω–∏—Ü–∞ 2Ô∏è‚É£,–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ñ—ã —Ç–æ–ª—å–∫–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è..',parse_mode='html',reply_markup=markup)

		if message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ω?':
			bot.send_message(message.chat.id, '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ωüßê\n–î–∞–≤–∞–π —É–∑–Ω–∞–µ–º!\n–¢—ã–∫–∞–π - https://telegra.ph/CHto-takoe-blokchejn-05-04',parse_mode='html')
		if message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ ICO?':
			bot.send_message(message.chat.id, 'ICO - –≤–µ–ª–∏–∫–∞—è –≤–µ—â—å,–ø–æ–º–æ–≥–∞—é—â–∞—è —Ç—ã—Å—è—á–∏ –ø—Ä–æ–µ–∫—Ç–∞–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ\n–î–∞–≤–∞–π—Ç–µ –∂–µ –ø–æ–≥–ª—É–±–∂–µ –∏–∑—É—á–∏–º –¥–∞–Ω–Ω—É—é —Ç–µ–º—É\n –¢—ã–∫–∞–π - https://telegra.ph/CHto-takoe-ICO-05-04',parse_mode='html')
		if message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–µ–π–¥–∏–Ω–≥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π?':
			bot.send_message(message.chat.id, '–¢—Ä–µ–π–¥–∏–Ω–≥ - –æ—á–µ—Ä–µ–¥–Ω–æ–µ –ú–ú–ú –∏–ª–∏ –∂–µ —á—Ç–æ —Ç–æ –±–æ–ª–µ–µ –∑–Ω–∞—á–∏–º–æ–µ?\n–î–∞–≤–∞–π—Ç–µ –∂–µ —É–∑–Ω–∞–µ–º\n–¢—ã–∫–∞–π -https://telegra.ph/CHto-takoe-trejding-kriptovalyutoj-05-04',parse_mode='html')
		if message.text == '–ì–¥–µ —Ö—Ä–∞–Ω–∏—Ç—å –±–∏—Ç–∫–æ–∏–Ω –∏ –¥—Ä—É–≥–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã? –í –∫–æ—à–µ–ª—å–∫–µ':
			bot.send_message(message.chat.id,'–ö–æ–Ω–µ—á–Ω–æ –∂–µ –≤ –∫–æ—à–µ–ª—å–∫–µ,–∫—Å—Ç–∞—Ç–∏ –ø–æ–π–¥—É —Ö–ª–µ–±–∞ –∫—É–ø–ª—é –∑–∞ –ø—è—Ç–∞–∫ –±–∏—Ç–∫–æ–∏–Ω–∞...–®—É—Ç–∫–∞\n–î–∞–≤–∞–π—Ç–µ —É–∑–Ω–∞–µ–º —Ç—Ä—É –∏–Ω—Ñ—É!\n–¢—ã–∫–∞–π - https://telegra.ph/Gde-hranit-bitkoin-i-drugie-kriptovalyuty-V-koshelke-05-04',parse_mode='html')
		if message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –±–∏—Ç–∫–æ–∏–Ω?':
			bot.send_message(message.chat.id,'–î–µ–Ω—å–≥–∏ –∏–∑ –±–∞–Ω–∫–∞ –ø—Ä–∏–∫–æ–ª–æ–≤ - –∏–ª–∏ –≤—Å—ë —Ç–∞–∫–∏ –Ω–µ—Ç\n–î–∞–≤–∞–π—Ç–µ –∂–µ —É–∑–Ω–∞–µ–º!\n–¢—ã–∫–∞–π - https://telegra.ph/CHto-takoe-bitkoin-05-04',parse_mode='html')
		if message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã?':
			bot.send_message(message.chat.id,'–ê —è —Ö–æ—Ç–µ–ª –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Å Microsoft...\n–¢—ã–∫–∞–π - https://telegra.ph/CHto-takoe-smart-kontrakty-05-04',parse_mode='html')
		if message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞—Ä—Ö–∏–∑–º?':
			bot.send_message(message.chat.id,'–ú–∞—Ç—å –∞–Ω–∞—Ä—Ö–∏—è –¥–∞?)\n –¢—ã–∫–∞–π - https://telegra.ph/CHto-takoe-kriptoanarhizm-05-04',parse_mode='html')
		if message.text == '–ù–µ –ø–æ–ø–∞–¥—É –ª–∏ —è –≤ —Ç—é—Ä—å–º—É –∑–∞ –±–∏—Ç–∫–æ–∏–Ω—ã?':
			bot.send_message(message.chat.id,'—è –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª —à—É—Ç–∫–∏ –ø—Ä–æ —Ç—é—Ä—å–º—É –∏ –±–∏—Ç–∫–æ–∏–Ω—ã xD\n–í—Å–µ —Ä–∞–≤–Ω–æ —Ç—ã–∫–∞–π - https://telegra.ph/Ne-popadu-li-ya-v-tyurmu-za-bitkoiny-05-04',parse_mode='html')
		if message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞–π–Ω–∏–Ω–≥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç?':
			bot.send_message(message.chat.id,'—ç–º,—á—Ç–æ,–º–∞–π–Ω–∫—Ä–∞—Ñ—Ç?)\n–ø—Ä–æ—Å—Ç–∏ —è –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É,–¢—ã–∫–∞–π - https://telegra.ph/CHto-takoe-majning-kriptovalyut-05-04',parse_mode='html')
		if message.text == '–ö–∞–∫ –º–∞–π–Ω–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É':
			bot.send_message(message.chat.id, '–î–∞ –≤—Ä–æ–¥–µ –ª–µ–≥–∫–æ 10 —à—Ç—É–∫ 1080GTX –∏ –ø–æ–µ—Ö–∞–ª–∏!ü§†\n–ù–æ –≤—Å—ë –Ω–µ —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ,—Ç–∞–∫ —á—Ç–æ –¢–´–ö–ê–ô - https://telegra.ph/Kak-majnit-kriptovalyutu-05-04',parse_mode='html')
		if message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –≠—Ñ–∏—Ä–∏—É–º?':
			bot.send_message(message.chat.id, '–†–£–°–°–ö–ê–Ø –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–ê!!!\n–¢—ã–∫–∞–π,–±—É–¥—å –ø–∞—Ç—Ä–∏—Ç–æ—Ç–æ–ºüá∑üá∫ - https://telegra.ph/CHto-takoe-EHfirium-05-04',parse_mode='html')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
        	if call.data == 'babb':
        		bot.send_message(call.message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ : BABB üëÄ\n\n–¶–µ–ª—å —Å–±–æ—Ä–æ–≤ : $20,000,000 USDüí∂\n\n–¢–∏–ø —Ç–æ–∫–µ–Ω–∞: ERC20ü§ñ\n\n–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞: 1 BAX = 0.0012 USDüí∞')
        	elif call.data == 'te_food':
        		bot.send_message(call.message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ : TE-FOOD üëÄ\n\n–¶–µ–ª—å —Å–±–æ—Ä–æ–≤ : $19,000,000 USDüí∂\n\n–¢–∏–ø —Ç–æ–∫–µ–Ω–∞: ERC20ü§ñ\n\n–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞: 1 TFD = 0.0391 USDüí∞')
        	elif call.data == 'asia':
        		bot.send_message(call.message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ : Electrify.Asia üëÄ\n\n–¶–µ–ª—å —Å–±–æ—Ä–æ–≤ : $30,000,000 USDüí∂\n\n–¢–∏–ø —Ç–æ–∫–µ–Ω–∞: ERC20ü§ñ\n\n–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞: 1 ELEC = 0.0800 USDüí∞')
        	elif call.data == 'networks':
        		bot.send_message(call.message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ : Debitum Network üëÄ\n\n–¶–µ–ª—å —Å–±–æ—Ä–æ–≤ : $17,200,000 USDüí∂\n\n–¢–∏–ø —Ç–æ–∫–µ–Ω–∞: ERC223ü§ñ\n\n–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞: 1 DEB = 0.13 USDüí∞')
        	elif call.data == 'banca':
        		bot.send_message(call.message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ : Banca üëÄ\n\n–¶–µ–ª—å —Å–±–æ—Ä–æ–≤ : $20,000,000 USDüí∂\n\n–¢–∏–ø —Ç–æ–∫–µ–Ω–∞: ERC20ü§ñ\n\n–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞: 1 BANCA = 0.0020 USDüí∞')
        	elif call.data == 'napoleon':
        		bot.send_message(call.message.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ : NaPoleonX üëÄ\n\n–¶–µ–ª—å —Å–±–æ—Ä–æ–≤ : 18,300,000 USDüí∂\n\n–¢–∏–ø —Ç–æ–∫–µ–Ω–∞: ERC20ü§ñ\n\n–¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞: 1 NPX = 0.87 USDüí∞')

    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
